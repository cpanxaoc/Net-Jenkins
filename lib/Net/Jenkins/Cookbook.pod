=head1 NAME

Net::Jenkins::Cookbook - A set of "recipes" for using L<Net::Jenkins>.

=head1 VERSION

Version 0.01

=head1 SYNOPSIS

    use Net::Jenkins;

    # defaults to host = localhost, port = 8080
    my $jenkins = Net::Jenkins->new;

    my $jenkins = Net::Jenkins->new( 
        host => 'ci.example.com' , 
        port => 7890 );

    my $summary = $jenkins->summary;
    my @views = $jenkins->views;
    my $mode = $jenkins->mode;

    my $xml = read_file 'xt/config.xml';
    if( $jenkins->create_job( 'Phifty', $xml ) ) {
        $jenkins->copy_job( 'test2' , 'Phifty' );
    }

    my @jobs = $jenkins->jobs;   # [ Net::Jenkins::Job , ... ]

    for my $job ( $jenkins->jobs ) {

        # trigger a build
        $job->build;

        my $details = $job->details;
        my $queue = $job->queue_item;

        sleep 1 while $job->in_queue ;

        if( $job->last_build ) {
            $job->last_build->console;
        }

        # Net::Jenkins::Job::Build
        for my $build ( $job->builds ) {
            my $d = $build->details;
            $build->name;
            $build->id;
            $build->created_at;  # DateTime object
        }

        $job->delete;
    }
    $jenkins->restart;  # returns true if success

=head1 TODO

=over

=item How to use L<LWP::UserAgent> 

For Jenkins hosts that need Basic/Digest/NTLM authentication

=item Retrieving the Jenkins version

    
=item Retrieving the next Jenkins job number

So when you start a new job, you can check it.  Or is this important now with
L<Net::Jenkins::Job>?

=item Use "build_job_with_parameters" for jobs with parameters

Instead of "build_job"

=back

=head2 Setting the URL scheme, or using a specific path to Jenkins

If you run Jenkins proxied behind another webserver, you'll need do a bit of
extra work to set up the Jenkins URL;

    my $jenkins = Net::Jenkins->new(
        # new URL scheme
        scheme          => q(https),
        host            => q(www.example.com),
        # different port
        port            => q(443),
        # non-obvious path
        jenkins_path    => q(/path/to/jenkins),

=head2 Connecting to a password-protected Jenkins instance

=over

=item 1. Create an L<HTTP::Headers> object

=item 2. Set your HTTP authentication credentials in that object

=item 3. Grab the copy of L<LWP::UserAgent> that L<Net::Jenkins> creates

=item 4. Tell that L<LWP::UserAgent> object to use your L<HTTP::Headers>

=item 5. Give the L<LWP::UserAgent> object back to L<Net::Jenkins>

=back

    # reusing the $jenkins object created above...
    $http_headers = HTTP::Headers->new;
    $http_headers->authorization_basic( q(faux-user), q(k0mp!ik@ted-p@$$));
    my $my_user_agent = $jenkins->user_agent;
    $my_user_agent->default_headers($http_headers);
    $jenkins->user_agent($my_user_agent);

=head2 Get the version of the Jenkins software running on the server

B<NOTE>: This method currently only works with the L<version of Net::Jenkins
stored in GitHub|https://github.com/cpanxaoc/Net-Jenkins>

    # Call $jenkins->summary to make a request to the Jenkins server
    # The Jenkins server version will be in an HTTP header in the reply
    my $summary = $jenkins->summary();

    # $summary will be undef if the request failed for whatever reason
    # Best to check for it check for it...
    if ( defined $summary ) {
        print q(Jenkins is online... Jenkins version: ) 
            . $jenkins->jenkins_version;
    }

=head1 AUTHOR

Brian Manning, C<< <xaoc at cpan dot org> >>

=head1 BUGS

Please report any bugs or feature requests using the GitHub issue tracker at
L<https://github.com/cpanxaoc/Net-Jenkins/issues>.  I will be notified, and
then you'll automatically be notified of progress on your bug as I make
changes.

=head1 SUPPORT

You can find documentation for this module with the perldoc command.

    perldoc Net::Jenkins::Cookbook


You can also look for information at:

=over 4

=item * GitHub project page

L<https://github.com/cpanxaoc/Net-Jenkins>

=back


=head1 ACKNOWLEDGEMENTS

Thanks to Yo-An Lin E<lt>cornelius.howl {at} gmail.comE<gt>, for writing
L<Net::Jenkins> in the first place.  Thanks for the L<Moose> team for making
writing Perl a lot less onerous.

=head1 LICENSE AND COPYRIGHT

Copyright 2013 Brian Manning.

This program is free software; you can redistribute it and/or modify it
under the terms of either: the GNU General Public License as published
by the Free Software Foundation; or the Artistic License.

See http://dev.perl.org/licenses/ for more information.

=cut
